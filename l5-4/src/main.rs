fn main() {
    let mut i: u16 = 0;
    print!("{}..", i);

    loop {
        i += 1000;
        print!("{}..", i);
        if i % 10000 ==0 {
            println!();
        }
    }
}

// 0..1000..2000..3000..4000..5000..6000..7000..8000..9000..10000..
// 11000..12000..13000..14000..15000..16000..17000..18000..19000..20000..
// 21000..22000..23000..24000..25000..26000..27000..28000..29000..30000..
// 31000..32000..33000..34000..35000..36000..37000..38000..39000..40000..
// 41000..42000..43000..44000..45000..46000..47000..48000..49000..50000..
// 51000..52000..53000..54000..55000..56000..57000..58000..59000..60000..
// thread 'main' panicked at 'attempt to add with overflow', l5-4/src/main.rs:6:9
// note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
// 61000..62000..63000..64000..65000..
